{"ast":null,"code":"var _jsxFileName = \"/home/george/Drop/src/Components/Question.js\";\nimport React, { Component } from 'react';\nimport Artist from './Artist';\nimport Song from './Song';\nimport logo from './logo.png';\nimport pop from '../pop.png';\nimport disco from '../disco.png';\nimport hiphop from '../hip-hop.png';\nimport techno from '../techno.png';\nimport edm from '../edm.png';\nimport queryString from 'query-string';\nlet songs = [];\nlet favoriteArtist = null;\nlet favoriteSong = null;\nlet hours8 = [7, 10, 10, 30, 10, 10, 6];\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favoriteGenre: null,\n      access_token: null\n    };\n    this.handlePlaylist = this.handlePlaylist.bind(this);\n    this.getUserID = this.getUserID.bind(this);\n    this.createPlaylist = this.createPlaylist.bind(this);\n    this.getPlaylistID = this.getPlaylistID.bind(this);\n    this.populatePlaylist = this.populatePlaylist.bind(this);\n    this.getRecommenedSongs = this.getRecommenedSongs.bind(this);\n    this.handleArtist = this.handleArtist.bind(this);\n    this.handleSong = this.handleSong.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = queryString.parse(window.location.hash);\n    this.setState({\n      access_token: parsed.access_token\n    });\n  }\n\n  async handlePlaylist() {\n    await this.getRecommenedSongs();\n    let userID = await this.getUserID();\n    await this.createPlaylist(userID);\n    let playlistID = await this.getPlaylistID();\n    await this.populatePlaylist(playlistID);\n  }\n\n  async getUserID() {\n    let response = await fetch('https://api.spotify.com/v1/me', {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.access_token\n      }\n    });\n    let data = await response.json();\n    return data.id;\n  }\n\n  createPlaylist(userID) {\n    return fetch(`https://api.spotify.com/v1/users/${userID}/playlists`, {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer ' + this.state.access_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: 'Drop',\n        public: false\n      })\n    });\n  }\n\n  async getPlaylistID() {\n    let response = await fetch('https://api.spotify.com/v1/me/playlists', {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.access_token\n      }\n    });\n    let data = await response.json();\n    let id = null;\n    data.items.forEach(item => {\n      if (item.name === 'Drop') id = item.id;\n    });\n    return id;\n  }\n\n  async getRecommenedSongs() {\n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[0]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.2&target_energy=0.2&min_popularity=30&target_tempo=60`, {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.access_token\n      }\n    }).then(response => response.json()).then(data => data.tracks.forEach(track => songs.push(track.uri)));\n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[1]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.4&target_energy=0.4&min_popularity=50&target_tempo=100`, {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.access_token\n      }\n    }).then(response => response.json()).then(data => data.tracks.forEach(track => songs.push(track.uri)));\n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[2]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.6&target_energy=0.6&min_popularity=50&target_tempo=140`, {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.access_token\n      }\n    }).then(response => response.json()).then(data => data.tracks.forEach(track => songs.push(track.uri)));\n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[3]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.9&target_energy=0.9&min_popularity=70&target_tempo=180`, {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.access_token\n      }\n    }).then(response => response.json()).then(data => data.tracks.forEach(track => songs.push(track.uri)));\n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[4]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.6&target_energy=0.6&min_popularity=50&target_tempo=160`, {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.access_token\n      }\n    }).then(response => response.json()).then(data => data.tracks.forEach(track => songs.push(track.uri)));\n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[5]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.4&target_energy=0.4&min_popularity=50&target_tempo=140`, {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.access_token\n      }\n    }).then(response => response.json()).then(data => data.tracks.forEach(track => songs.push(track.uri)));\n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[6]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.4&target_energy=0.4&min_popularity=50&target_tempo=100`, {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.access_token\n      }\n    }).then(response => response.json()).then(data => data.tracks.forEach(track => songs.push(track.uri)));\n  }\n\n  populatePlaylist(playlistID) {\n    console.log(songs);\n    return fetch(`https://api.spotify.com/v1/playlists/${playlistID}/tracks`, {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer ' + this.state.access_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        uris: songs\n      })\n    });\n  }\n\n  handleArtist(artist) {\n    favoriteArtist = artist;\n  }\n\n  handleSong(song) {\n    favoriteSong = song;\n  }\n\n  render() {\n    if (!this.props.questionID) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, \"What's the length of your party\"), /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        onClick: () => this.props.handleClick(1, 'pop'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }));\n    } else if (this.props.questionID === 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, \"What's your partys theme\"), /*#__PURE__*/React.createElement(\"img\", {\n        src: pop,\n        alt: \"Logo\",\n        onClick: () => {\n          this.props.handleClick(2);\n          this.setState({\n            favoriteGenre: 'pop'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: disco,\n        alt: \"Logo\",\n        onClick: () => {\n          this.props.handleClick(2);\n          this.setState({\n            favoriteGenre: 'disco'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: hiphop,\n        alt: \"Logo\",\n        onClick: () => {\n          this.props.handleClick(2);\n          this.setState({\n            favoriteGenre: 'hip-hop'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: techno,\n        alt: \"Logo\",\n        onClick: () => {\n          this.props.handleClick(2);\n          this.setState({\n            favoriteGenre: 'techno'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: edm,\n        alt: \"Logo\",\n        onClick: () => {\n          this.props.handleClick(2);\n          this.setState({\n            favoriteGenre: 'edm'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }));\n    } else if (this.props.questionID === 2) {\n      return /*#__PURE__*/React.createElement(Artist, {\n        genre: this.state.favoriteGenre,\n        handleClick: this.props.handleClick,\n        handleArtist: this.handleArtist,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      });\n    } else if (this.props.questionID === 3) {\n      return /*#__PURE__*/React.createElement(Song, {\n        genre: this.state.favoriteGenre,\n        handleClick: this.props.handleClick,\n        handleSong: this.handleSong,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      });\n    } else if (this.props.questionID === 4) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }\n      }, \"Press the button below to create your playlist\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.handlePlaylist();\n          this.props.handleClick(5, ' ');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, \"Create\"));\n    } else if (this.props.questionID === 5) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }, \"Your playlist is ready ! Check your account to listen\"));\n    }\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/home/george/Drop/src/Components/Question.js"],"names":["React","Component","Artist","Song","logo","pop","disco","hiphop","techno","edm","queryString","songs","favoriteArtist","favoriteSong","hours8","Question","constructor","props","state","favoriteGenre","access_token","handlePlaylist","bind","getUserID","createPlaylist","getPlaylistID","populatePlaylist","getRecommenedSongs","handleArtist","handleSong","componentDidMount","parsed","parse","window","location","hash","setState","userID","playlistID","response","fetch","headers","data","json","id","method","body","JSON","stringify","name","public","items","forEach","item","then","tracks","track","push","uri","console","log","uris","artist","song","render","questionID","handleClick"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Artist from './Artist';\nimport Song from './Song';\nimport logo from './logo.png';\nimport pop from '../pop.png';\nimport disco from '../disco.png';\nimport hiphop from '../hip-hop.png';\nimport techno from '../techno.png';\nimport edm from '../edm.png';\nimport queryString from 'query-string';\n\n\nlet songs = [];\nlet favoriteArtist = null;\nlet favoriteSong = null;\nlet hours8 = [7, 10, 10, 30, 10, 10, 6];\n\nclass Question extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      favoriteGenre: null,\n      access_token: null\n    }\n    this.handlePlaylist = this.handlePlaylist.bind(this);\n    this.getUserID = this.getUserID.bind(this);\n    this.createPlaylist = this.createPlaylist.bind(this);\n    this.getPlaylistID = this.getPlaylistID.bind(this);\n    this.populatePlaylist = this.populatePlaylist.bind(this);\n    this.getRecommenedSongs = this.getRecommenedSongs.bind(this);\n    this.handleArtist = this.handleArtist.bind(this);\n    this.handleSong = this.handleSong.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = queryString.parse(window.location.hash);\n    this.setState({access_token: parsed.access_token});\n  }\n\n  async handlePlaylist() {\n    await this.getRecommenedSongs()\n    let userID = await this.getUserID()\n    await this.createPlaylist(userID)\n    let playlistID = await this.getPlaylistID()\n    await this.populatePlaylist(playlistID)\n  }\n\n  async getUserID() {\n    let response = await fetch('https://api.spotify.com/v1/me', {\n      headers: {'Authorization': 'Bearer ' + this.state.access_token}\n    })\n    let data = await response.json()\n    return data.id;\n  }\n\n  createPlaylist(userID) {\n    return fetch(`https://api.spotify.com/v1/users/${userID}/playlists`,  {\n      method: 'POST',\n      headers: { 'Authorization': 'Bearer ' + this.state.access_token, 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name: 'Drop', public: false}),\n    })\n  }\n\n  async getPlaylistID() {\n    let response = await fetch('https://api.spotify.com/v1/me/playlists', {\n      headers: {'Authorization': 'Bearer ' + this.state.access_token}\n    })\n    let data = await response.json()\n    let id = null\n    data.items.forEach(item => {if (item.name === 'Drop') id = item.id})\n    return id\n  }\n\n  async getRecommenedSongs() {\n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[0]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.2&target_energy=0.2&min_popularity=30&target_tempo=60`, {\n      headers: {'Authorization': 'Bearer ' + this.state.access_token}\n    }).then(response => response.json())\n    .then(data => data.tracks.forEach(track => songs.push(track.uri)))\n\n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[1]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.4&target_energy=0.4&min_popularity=50&target_tempo=100`, {\n      headers: {'Authorization': 'Bearer ' + this.state.access_token}\n    }).then(response => response.json())\n    .then(data => data.tracks.forEach(track => songs.push(track.uri)))\n    \n\n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[2]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.6&target_energy=0.6&min_popularity=50&target_tempo=140`, {\n      headers: {'Authorization': 'Bearer ' + this.state.access_token}\n    }).then(response => response.json())\n    .then(data => data.tracks.forEach(track => songs.push(track.uri)))\n    \n    \n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[3]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.9&target_energy=0.9&min_popularity=70&target_tempo=180`, {\n      headers: {'Authorization': 'Bearer ' + this.state.access_token}\n    }).then(response => response.json())\n    .then(data => data.tracks.forEach(track => songs.push(track.uri)))\n\n    \n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[4]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.6&target_energy=0.6&min_popularity=50&target_tempo=160`, {\n      headers: {'Authorization': 'Bearer ' + this.state.access_token}\n    }).then(response => response.json())\n    .then(data => data.tracks.forEach(track => songs.push(track.uri)))\n\n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[5]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.4&target_energy=0.4&min_popularity=50&target_tempo=140`, {\n      headers: {'Authorization': 'Bearer ' + this.state.access_token}\n    }).then(response => response.json())\n    .then(data => data.tracks.forEach(track => songs.push(track.uri)))\n\n    await fetch(`https://api.spotify.com/v1/recommendations?limit=${hours8[6]}&market=US&seed_genres=${this.state.favoriteGenre}&seed_artists=${favoriteArtist}&seed_tracks=${favoriteSong}&target_danceability=0.4&target_energy=0.4&min_popularity=50&target_tempo=100`, {\n      headers: {'Authorization': 'Bearer ' + this.state.access_token}\n    }).then(response => response.json())\n    .then(data => data.tracks.forEach(track => songs.push(track.uri)))\n  }\n\n  populatePlaylist(playlistID) {\n    console.log(songs)\n    return fetch(`https://api.spotify.com/v1/playlists/${playlistID}/tracks`,  {\n      method: 'POST',\n      headers: { 'Authorization': 'Bearer ' + this.state.access_token, 'Content-Type': 'application/json' },\n      body: JSON.stringify({ uris: songs}),\n    })\n  }\n\n  handleArtist(artist) {\n    favoriteArtist = artist\n  }\n\n  handleSong(song) {\n    favoriteSong = song\n  }\n\n  render() {\n      if (!this.props.questionID) {\n        return(\n          <div>\n            <header>What's the length of your party</header>  \n            <img src={logo} alt=\"Logo\" onClick={() => this.props.handleClick(1, 'pop')}/>\n            <img src={logo} alt=\"Logo\"/>\n            <img src={logo} alt=\"Logo\"/>\n            <img src={logo} alt=\"Logo\"/>\n          </div>\n        )\n      }\n      else if (this.props.questionID === 1) {\n        return(\n          <div>\n            <header>What's your partys theme</header> \n            <img src={pop} alt=\"Logo\" onClick={() => {this.props.handleClick(2)\n                                                      this.setState({favoriteGenre: 'pop'})}}/>\n\n            <img src={disco} alt=\"Logo\" onClick={() => {this.props.handleClick(2)\n                                                        this.setState({favoriteGenre: 'disco'})}}/>\n\n            <img src={hiphop} alt=\"Logo\" onClick={() => {this.props.handleClick(2)\n                                                         this.setState({favoriteGenre: 'hip-hop'})}}/>\n\n            <img src={techno} alt=\"Logo\" onClick={() => {this.props.handleClick(2)\n                                                         this.setState({favoriteGenre: 'techno'})}}/>\n                                                         \n            <img src={edm} alt=\"Logo\" onClick={() => {this.props.handleClick(2)\n                                                      this.setState({favoriteGenre: 'edm'})}}/>\n          </div>\n        )\n      }\n      else if (this.props.questionID === 2) {\n        return(\n          <Artist genre = {this.state.favoriteGenre} handleClick = {this.props.handleClick} handleArtist = {this.handleArtist}/>\n        )\n      }\n      else if (this.props.questionID === 3) {\n        return(\n          <Song genre = {this.state.favoriteGenre} handleClick = {this.props.handleClick} handleSong = {this.handleSong}/>\n        )\n      }\n      else if (this.props.questionID === 4) {\n        return(\n          <div>\n            <header>Press the button below to create your playlist</header>\n            <button onClick={() => {this.handlePlaylist()\n                                    this.props.handleClick(5, ' ')}}>Create</button>\n          </div>\n        )\n      }\n      else if (this.props.questionID === 5) {\n        return(\n          <div>\n            <header>\n              Your playlist is ready !\n              Check your account to listen\n            </header>\n          </div>\n        )\n      }\n  }\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}